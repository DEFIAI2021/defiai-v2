/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FakeToken, FakeTokenInterface } from "../FakeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "devMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f2538038062000f2583398101604081905262000034916200022e565b8181620000413362000085565b815162000056906006906020850190620000d5565b5080516200006c906005906020840190620000d5565b50506004805460ff1916601217905550620002e8915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000e39062000295565b90600052602060002090601f01602090048101928262000107576000855562000152565b82601f106200012257805160ff191683800117855562000152565b8280016001018555821562000152579182015b828111156200015257825182559160200191906001019062000135565b506200016092915062000164565b5090565b5b8082111562000160576000815560010162000165565b600082601f8301126200018c578081fd5b81516001600160401b0380821115620001a957620001a9620002d2565b604051601f8301601f19908116603f01168101908282118183101715620001d457620001d4620002d2565b81604052838152602092508683858801011115620001f0578485fd5b8491505b83821015620002135785820183015181830184015290820190620001f4565b838211156200022457848385830101525b9695505050505050565b6000806040838503121562000241578182fd5b82516001600160401b038082111562000258578384fd5b62000266868387016200017b565b935060208501519150808211156200027c578283fd5b506200028b858286016200017b565b9150509250929050565b600181811c90821680620002aa57607f821691505b60208210811415620002cc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610c2d80620002f86000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a0712d6811610071578063a0712d6814610222578063a457c2d714610235578063a9059cbb14610248578063dd62ed3e1461025b578063f2fde38b1461029457600080fd5b8063715018a6146101dc578063893d20e8146101e45780638da5cb5b1461020957806395d89b411461021a57600080fd5b8063313ce567116100de578063313ce56714610176578063375a069a1461018b57806339509351146101a057806370a08231146101b357600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b6101186102a7565b6040516101259190610b10565b60405180910390f35b61014161013c366004610acf565b610339565b6040519015158152602001610125565b6003545b604051908152602001610125565b610141610171366004610a94565b61034f565b60045460405160ff9091168152602001610125565b61019e610199366004610af8565b6103fe565b005b6101416101ae366004610acf565b61040b565b6101556101c1366004610a41565b6001600160a01b031660009081526001602052604090205490565b61019e610447565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610125565b6000546001600160a01b03166101f1565b61011861047d565b610141610230366004610af8565b61048c565b610141610243366004610acf565b6104ca565b610141610256366004610acf565b610563565b610155610269366004610a62565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61019e6102a2366004610a41565b610570565b6060600680546102b690610bbc565b80601f01602080910402602001604051908101604052809291908181526020018280546102e290610bbc565b801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b5050505050905090565b6000610346338484610608565b50600192915050565b600061035c84848461072c565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156103e65760405162461bcd60e51b815260206004820152602860248201527f42455032303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103f38533858403610608565b506001949350505050565b61040833826108fb565b50565b3360008181526002602090815260408083206001600160a01b03871684529091528120549091610346918590610442908690610b98565b610608565b6000546001600160a01b031633146104715760405162461bcd60e51b81526004016103dd90610b63565b61047b60006109da565b565b6060600580546102b690610bbc565b600080546001600160a01b031633146104b75760405162461bcd60e51b81526004016103dd90610b63565b6104c133836108fb565b5060015b919050565b3360009081526002602090815260408083206001600160a01b03861684529091528120548281101561054c5760405162461bcd60e51b815260206004820152602560248201527f42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103dd565b6105593385858403610608565b5060019392505050565b600061034633848461072c565b6000546001600160a01b0316331461059a5760405162461bcd60e51b81526004016103dd90610b63565b6001600160a01b0381166105ff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103dd565b610408816109da565b6001600160a01b03831661066a5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103dd565b6001600160a01b0382166106cb5760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107905760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b0382166107f25760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6001600160a01b0383166000908152600160205260409020548181101561086a5760405162461bcd60e51b815260206004820152602660248201527f42455032303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103dd565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906108a1908490610b98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108ed91815260200190565b60405180910390a350505050565b6001600160a01b0382166109515760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103dd565b80600360008282546109639190610b98565b90915550506001600160a01b03821660009081526001602052604081208054839290610990908490610b98565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146104c557600080fd5b600060208284031215610a52578081fd5b610a5b82610a2a565b9392505050565b60008060408385031215610a74578081fd5b610a7d83610a2a565b9150610a8b60208401610a2a565b90509250929050565b600080600060608486031215610aa8578081fd5b610ab184610a2a565b9250610abf60208501610a2a565b9150604084013590509250925092565b60008060408385031215610ae1578182fd5b610aea83610a2a565b946020939093013593505050565b600060208284031215610b09578081fd5b5035919050565b6000602080835283518082850152825b81811015610b3c57858101830151858201604001528201610b20565b81811115610b4d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610bb757634e487b7160e01b81526011600452602481fd5b500190565b600181811c90821680610bd057607f821691505b60208210811415610bf157634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122093abaca4b3060c9f3c6429a9bfb455f5f482f3a7848c20e1668d43c495370d4e64736f6c63430008040033";

type FakeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FakeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FakeToken__factory extends ContractFactory {
  constructor(...args: FakeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FakeToken";
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FakeToken> {
    return super.deploy(name, symbol, overrides || {}) as Promise<FakeToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): FakeToken {
    return super.attach(address) as FakeToken;
  }
  connect(signer: Signer): FakeToken__factory {
    return super.connect(signer) as FakeToken__factory;
  }
  static readonly contractName: "FakeToken";
  public readonly contractName: "FakeToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FakeTokenInterface {
    return new utils.Interface(_abi) as FakeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FakeToken {
    return new Contract(address, _abi, signerOrProvider) as FakeToken;
  }
}
