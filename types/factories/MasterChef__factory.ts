/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChef, MasterChefInterface } from "../MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract CakeToken",
        name: "_cake",
        type: "address",
      },
      {
        internalType: "contract SyrupBar",
        name: "_syrup",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cakePerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IBEP20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cake",
    outputs: [
      {
        internalType: "contract CakeToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cakePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enterStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "leaveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "contract IMigratorChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingCake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IBEP20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accCakePerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMigratorChef",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "syrup",
    outputs: [
      {
        internalType: "contract SyrupBar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001600555600060095534801561001a57600080fd5b50604051612370380380612370833981810160405260a081101561003d57600080fd5b5080516020820151604083015160608401516080909401519293919290919060006100666101e0565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b03199081166001600160a01b03978816908117835560028054831697891697909717909655600380548216958816959095179094556004928355600a829055604080516080810182529586526103e86020870181815291870193845260006060880181815260078054958601815590915296517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688939095029283018054909616949097169390931790935590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689830155517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a82015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b909101556009556101e4565b3390565b61217d806101f36000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80635ffe6146116101045780638d88a90e116100a2578063d49e77cd11610071578063d49e77cd146104b1578063dce17484146104b9578063e2bbb158146104c1578063f2fde38b146104e4576101cf565b80638d88a90e1461041b5780638da5cb5b146104415780638dbb1e3a1461044957806393f1a40b1461046c576101cf565b8063715018a6116100de578063715018a6146103df5780637cd07e47146103e757806386a952c41461040b5780638aa2855014610413576101cf565b80635ffe61461461038f578063630b5ba1146103ac57806364482f79146103b4576101cf565b806323cf311811610171578063454b06081161014b578063454b06081461033057806348cd4cb11461034d57806351eb05a6146103555780635312ea8e14610372576101cf565b806323cf3118146102ca57806341441d3b146102f0578063441a3e701461030d576101cf565b80631175a1dd116101ad5780631175a1dd146102155780631526fe271461024157806317caf6f11461028e5780631eaaa04514610296576101cf565b80630755e0b6146101d4578063081e3eda146101ee5780631058d281146101f6575b600080fd5b6101dc61050a565b60408051918252519081900360200190f35b6101dc610510565b6102136004803603602081101561020c57600080fd5b5035610516565b005b6101dc6004803603604081101561022b57600080fd5b50803590602001356001600160a01b03166106fa565b61025e6004803603602081101561025757600080fd5b5035610864565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b6101dc6108a5565b610213600480360360608110156102ac57600080fd5b508035906001600160a01b03602082013516906040013515156108ab565b610213600480360360208110156102e057600080fd5b50356001600160a01b0316610a3b565b6102136004803603602081101561030657600080fd5b5035610abf565b6102136004803603604081101561032357600080fd5b5080359060200135610c53565b6102136004803603602081101561034657600080fd5b5035610df8565b6101dc611054565b6102136004803603602081101561036b57600080fd5b503561105a565b6102136004803603602081101561038857600080fd5b5035611280565b610213600480360360208110156103a557600080fd5b503561131b565b610213611382565b610213600480360360608110156103ca57600080fd5b508035906020810135906040013515156113a5565b6102136114ad565b6103ef611559565b604080516001600160a01b039092168252519081900360200190f35b6103ef611568565b6101dc611577565b6102136004803603602081101561043157600080fd5b50356001600160a01b031661157d565b6103ef6115ea565b6101dc6004803603604081101561045f57600080fd5b50803590602001356115f9565b6104986004803603604081101561048257600080fd5b50803590602001356001600160a01b0316611614565b6040805192835260208301919091528051918290030190f35b6103ef611638565b6103ef611647565b610213600480360360408110156104d757600080fd5b5080359060200135611656565b610213600480360360208110156104fa57600080fd5b50356001600160a01b03166117ba565b60045481565b60075490565b6000600760008154811061052657fe5b600091825260208083203384527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c790915260409092208054600490920290920192508311156105b1576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b6105bb600061105a565b60006105f582600101546105ef64e8d4a510006105e9876003015487600001546118bc90919063ffffffff16565b90611915565b90611957565b90508015610607576106073382611999565b83156106315781546106199085611957565b82558254610631906001600160a01b03163386611a0a565b6003830154825461064c9164e8d4a51000916105e9916118bc565b600183015560025460408051632770a7eb60e21b81523360048201526024810187905290516001600160a01b0390921691639dc29fac9160448082019260009290919082900301818387803b1580156106a457600080fd5b505af11580156106b8573d6000803e3d6000fd5b5050604080518781529051600093503392507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a350505050565b6000806007848154811061070a57fe5b600091825260208083208784526008825260408085206001600160a01b03898116875290845281862060049586029093016003810154815484516370a0823160e01b81523098810198909852935191985093969395939492909116926370a08231926024808301939192829003018186803b15801561078857600080fd5b505afa15801561079c573d6000803e3d6000fd5b505050506040513d60208110156107b257600080fd5b50516002850154909150431180156107c957508015155b1561082f5760006107de8560020154436115f9565b9050600061080b6009546105e98860010154610805600454876118bc90919063ffffffff16565b906118bc565b905061082a610823846105e98464e8d4a510006118bc565b8590611a61565b935050505b61085783600101546105ef64e8d4a510006105e98688600001546118bc90919063ffffffff16565b9450505050505b92915050565b6007818154811061087157fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b60095481565b6108b3611abb565b6001600160a01b03166108c46115ea565b6001600160a01b03161461090d576040805162461bcd60e51b81526020600482018190526024820152600080516020612128833981519152604482015290519081900360640190fd5b801561091b5761091b611382565b6000600a54431161092e57600a54610930565b435b6009549091506109409085611a61565b600955604080516080810182526001600160a01b0385811682526020820187815292820184815260006060840181815260078054600181018255925293517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600490920291820180546001600160a01b031916919094161790925592517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68982015591517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a830155517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b90910155610a35611abf565b50505050565b610a43611abb565b6001600160a01b0316610a546115ea565b6001600160a01b031614610a9d576040805162461bcd60e51b81526020600482018190526024820152600080516020612128833981519152604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60006007600081548110610acf57fe5b600091825260208083203384527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c790915260408320600490920201925090610b169061105a565b805415610b5f576000610b4b82600101546105ef64e8d4a510006105e9876003015487600001546118bc90919063ffffffff16565b90508015610b5d57610b5d3382611999565b505b8215610b8b578154610b7c906001600160a01b0316333086611b61565b8054610b889084611a61565b81555b60038201548154610ba69164e8d4a51000916105e9916118bc565b6001820155600254604080516340c10f1960e01b81523360048201526024810186905290516001600160a01b03909216916340c10f199160448082019260009290919082900301818387803b158015610bfe57600080fd5b505af1158015610c12573d6000803e3d6000fd5b5050604080518681529051600093503392507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a3505050565b81610ca5576040805162461bcd60e51b815260206004820152601a60248201527f77697468647261772043414b4520627920756e7374616b696e67000000000000604482015290519081900360640190fd5b600060078381548110610cb457fe5b600091825260208083208684526008825260408085203386529092529220805460049092029092019250831115610d27576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b610d308461105a565b6000610d5e82600101546105ef64e8d4a510006105e9876003015487600001546118bc90919063ffffffff16565b90508015610d7057610d703382611999565b8315610d9a578154610d829085611957565b82558254610d9a906001600160a01b03163386611a0a565b60038301548254610db59164e8d4a51000916105e9916118bc565b6001830155604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b6006546001600160a01b0316610e4c576040805162461bcd60e51b815260206004820152601460248201527336b4b3b930ba329d1037379036b4b3b930ba37b960611b604482015290519081900360640190fd5b600060078281548110610e5b57fe5b600091825260208083206004928302018054604080516370a0823160e01b81523095810195909552519195506001600160a01b0316939284926370a0823192602480840193829003018186803b158015610eb457600080fd5b505afa158015610ec8573d6000803e3d6000fd5b505050506040513d6020811015610ede57600080fd5b5051600654909150610efd906001600160a01b03848116911683611bbb565b6006546040805163ce5494bb60e01b81526001600160a01b0385811660048301529151600093929092169163ce5494bb9160248082019260209290919082900301818787803b158015610f4f57600080fd5b505af1158015610f63573d6000803e3d6000fd5b505050506040513d6020811015610f7957600080fd5b5051604080516370a0823160e01b815230600482015290519192506001600160a01b038316916370a0823191602480820192602092909190829003018186803b158015610fc557600080fd5b505afa158015610fd9573d6000803e3d6000fd5b505050506040513d6020811015610fef57600080fd5b50518214611033576040805162461bcd60e51b815260206004820152600c60248201526b1b5a59dc985d194e8818985960a21b604482015290519081900360640190fd5b83546001600160a01b0319166001600160a01b039190911617909255505050565b600a5481565b60006007828154811061106957fe5b906000526020600020906004020190508060020154431161108a575061127d565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156110d457600080fd5b505afa1580156110e8573d6000803e3d6000fd5b505050506040513d60208110156110fe57600080fd5b505190508061111457504360029091015561127d565b60006111248360020154436115f9565b9050600061114b6009546105e98660010154610805600454876118bc90919063ffffffff16565b6001546003549192506001600160a01b03908116916340c10f19911661117284600a611915565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156111b857600080fd5b505af11580156111cc573d6000803e3d6000fd5b5050600154600254604080516340c10f1960e01b81526001600160a01b0392831660048201526024810187905290519190921693506340c10f199250604480830192600092919082900301818387803b15801561122857600080fd5b505af115801561123c573d6000803e3d6000fd5b5050505061126a61125f846105e964e8d4a51000856118bc90919063ffffffff16565b600386015490611a61565b6003850155505043600290920191909155505b50565b60006007828154811061128f57fe5b600091825260208083208584526008825260408085203380875293529093208054600490930290930180549094506112d4926001600160a01b03919091169190611a0a565b80546040805191825251849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a360008082556001909101555050565b611323611abb565b6001600160a01b03166113346115ea565b6001600160a01b03161461137d576040805162461bcd60e51b81526020600482018190526024820152600080516020612128833981519152604482015290519081900360640190fd5b600555565b60075460005b818110156113a1576113998161105a565b600101611388565b5050565b6113ad611abb565b6001600160a01b03166113be6115ea565b6001600160a01b031614611407576040805162461bcd60e51b81526020600482018190526024820152600080516020612128833981519152604482015290519081900360640190fd5b801561141557611415611382565b6114528261144c6007868154811061142957fe5b90600052602060002090600402016001015460095461195790919063ffffffff16565b90611a61565b60098190555060006007848154811061146757fe5b9060005260206000209060040201600101549050826007858154811061148957fe5b906000526020600020906004020160010181905550828114610a3557610a35611abf565b6114b5611abb565b6001600160a01b03166114c66115ea565b6001600160a01b03161461150f576040805162461bcd60e51b81526020600482018190526024820152600080516020612128833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6006546001600160a01b031681565b6002546001600160a01b031681565b60055481565b6003546001600160a01b031633146115c8576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b60055460009061160d906108058486611957565b9392505050565b60086020908152600092835260408084209091529082529020805460019091015482565b6003546001600160a01b031681565b6001546001600160a01b031681565b816116a8576040805162461bcd60e51b815260206004820152601760248201527f6465706f7369742043414b45206279207374616b696e67000000000000000000604482015290519081900360640190fd5b6000600783815481106116b757fe5b600091825260208083208684526008825260408085203386529092529220600490910290910191506116e88461105a565b80541561173157600061171d82600101546105ef64e8d4a510006105e9876003015487600001546118bc90919063ffffffff16565b9050801561172f5761172f3382611999565b505b821561175d57815461174e906001600160a01b0316333086611b61565b805461175a9084611a61565b81555b600382015481546117789164e8d4a51000916105e9916118bc565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b6117c2611abb565b6001600160a01b03166117d36115ea565b6001600160a01b03161461181c576040805162461bcd60e51b81526020600482018190526024820152600080516020612128833981519152604482015290519081900360640190fd5b6001600160a01b0381166118615760405162461bcd60e51b81526004018080602001828103825260268152602001806120856026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000826118cb5750600061085e565b828202828482816118d857fe5b041461160d5760405162461bcd60e51b81526004018080602001828103825260218152602001806120d16021913960400191505060405180910390fd5b600061160d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611cce565b600061160d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611d70565b600254604080516328b9b77360e21b81526001600160a01b038581166004830152602482018590529151919092169163a2e6ddcc91604480830192600092919082900301818387803b1580156119ee57600080fd5b505af1158015611a02573d6000803e3d6000fd5b505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611a5c908490611dca565b505050565b60008282018381101561160d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b600754600060015b82811015611b0a57611b0060078281548110611adf57fe5b90600052602060002090600402016001015483611a6190919063ffffffff16565b9150600101611ac7565b5080156113a157611b1c816003611915565b9050611b338161144c600760008154811061142957fe5b600981905550806007600081548110611b4857fe5b9060005260206000209060040201600101819055505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610a35908590611dca565b801580611c41575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015611c1357600080fd5b505afa158015611c27573d6000803e3d6000fd5b505050506040513d6020811015611c3d57600080fd5b5051155b611c7c5760405162461bcd60e51b81526004018080602001828103825260368152602001806120f26036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611a5c908490611dca565b60008183611d5a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d1f578181015183820152602001611d07565b50505050905090810190601f168015611d4c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581611d6657fe5b0495945050505050565b60008184841115611dc25760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611d1f578181015183820152602001611d07565b505050900390565b6060611e1f826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e7b9092919063ffffffff16565b805190915015611a5c57808060200190516020811015611e3e57600080fd5b5051611a5c5760405162461bcd60e51b815260040180806020018281038252602a81526020018061205b602a913960400191505060405180910390fd5b6060611e8a8484600085611e92565b949350505050565b606082471015611ed35760405162461bcd60e51b81526004018080602001828103825260268152602001806120ab6026913960400191505060405180910390fd5b611edc85611fee565b611f2d576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611f6c5780518252601f199092019160209182019101611f4d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611fce576040519150601f19603f3d011682016040523d82523d6000602084013e611fd3565b606091505b5091509150611fe3828286611ff4565b979650505050505050565b3b151590565b6060831561200357508161160d565b8251156120135782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315611d1f578181015183820152602001611d0756fe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565644f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212206f029973605a173b79b6b63f281e7bc2f05faba85c56b4adbdee498e7932422064736f6c634300060c0033";

type MasterChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterChef__factory extends ContractFactory {
  constructor(...args: MasterChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MasterChef";
  }

  deploy(
    _cake: string,
    _syrup: string,
    _devaddr: string,
    _cakePerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _cake,
      _syrup,
      _devaddr,
      _cakePerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  getDeployTransaction(
    _cake: string,
    _syrup: string,
    _devaddr: string,
    _cakePerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cake,
      _syrup,
      _devaddr,
      _cakePerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }
  static readonly contractName: "MasterChef";
  public readonly contractName: "MasterChef";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
